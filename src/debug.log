(0.070) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.001) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.001) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
(0.003) CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.102) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
(0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-12-09 20:07:20.924735'); args=['contenttypes', '0001_initial', '2024-12-09 20:07:20.924735']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.016) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
(0.079) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); args=None; alias=default
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); (params None)
(0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); args=None; alias=default
CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params None)
(0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=None; alias=default
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
(0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params None)
(0.000) CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); args=None; alias=default
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
(0.000) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
(0.000) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); (params None)
(0.000) CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); args=None; alias=default
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
(0.000) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
(0.000) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); (params None)
(0.000) CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); args=None; alias=default
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
(0.000) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
(0.000) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
(0.102) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.016) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-12-09 20:07:21.424837'); args=['auth', '0001_initial', '2024-12-09 20:07:21.424837']; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
(0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
(0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
(0.104) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.013) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-12-09 20:07:21.634067'); args=['admin', '0001_initial', '2024-12-09 20:07:21.634067']; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
(0.003) CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); args=None; alias=default
INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
(0.000) INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; args=(); alias=default
DROP TABLE "django_admin_log"; (params ())
(0.000) DROP TABLE "django_admin_log"; args=(); alias=default
ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
(0.001) ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; args=(); alias=default
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
(0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
(0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-12-09 20:07:22.022033'); args=['admin', '0002_logentry_remove_auto_add', '2024-12-09 20:07:22.022033']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.012) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.004) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-12-09 20:07:22.224481'); args=['admin', '0003_logentry_add_action_flag_choices', '2024-12-09 20:07:22.224481']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.010) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
(0.099) CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); args=None; alias=default
INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
(0.000) INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; args=(); alias=default
DROP TABLE "django_content_type"; (params ())
(0.000) DROP TABLE "django_content_type"; args=(); alias=default
ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
(0.001) ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; args=(); alias=default
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
INSERT INTO "new__django_content_type" ("id", "app_label", "model") SELECT "id", "app_label", "model" FROM "django_content_type"; (params ())
(0.000) INSERT INTO "new__django_content_type" ("id", "app_label", "model") SELECT "id", "app_label", "model" FROM "django_content_type"; args=(); alias=default
DROP TABLE "django_content_type"; (params ())
(0.000) DROP TABLE "django_content_type"; args=(); alias=default
ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
(0.001) ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; args=(); alias=default
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-12-09 20:07:22.722079'); args=['contenttypes', '0002_remove_content_type_name', '2024-12-09 20:07:22.722079']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.008) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
(0.003) CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); args=None; alias=default
INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
(0.000) INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; args=(); alias=default
DROP TABLE "auth_permission"; (params ())
(0.000) DROP TABLE "auth_permission"; args=(); alias=default
ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
(0.001) ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; args=(); alias=default
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
(0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
(0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-12-09 20:07:22.928386'); args=['auth', '0002_alter_permission_name_max_length', '2024-12-09 20:07:22.928386']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.100) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); (params None)
(0.102) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); args=None; alias=default
INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email" FROM "auth_user"; (params ())
(0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email" FROM "auth_user"; args=(); alias=default
DROP TABLE "auth_user"; (params ())
(0.000) DROP TABLE "auth_user"; args=(); alias=default
ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
(0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-12-09 20:07:23.229661'); args=['auth', '0003_alter_user_email_max_length', '2024-12-09 20:07:23.229661']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.092) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.095) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-12-09 20:07:23.329630'); args=['auth', '0004_alter_user_username_opts', '2024-12-09 20:07:23.329630']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.009) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); (params None)
(0.003) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); args=None; alias=default
INSERT INTO "new__auth_user" ("id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login") SELECT "id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login" FROM "auth_user"; (params ())
(0.000) INSERT INTO "new__auth_user" ("id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login") SELECT "id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login" FROM "auth_user"; args=(); alias=default
DROP TABLE "auth_user"; (params ())
(0.000) DROP TABLE "auth_user"; args=(); alias=default
ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
(0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-12-09 20:07:23.628760'); args=['auth', '0005_alter_user_last_login_null', '2024-12-09 20:07:23.628760']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.104) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-12-09 20:07:23.734366'); args=['auth', '0006_require_contenttypes_0002', '2024-12-09 20:07:23.734366']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.010) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.004) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-12-09 20:07:23.923794'); args=['auth', '0007_alter_validators_add_error_messages', '2024-12-09 20:07:23.923794']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.012) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE); (params None)
(0.004) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE); args=None; alias=default
INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username") SELECT "id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username" FROM "auth_user"; (params ())
(0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username") SELECT "id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username" FROM "auth_user"; args=(); alias=default
DROP TABLE "auth_user"; (params ())
(0.000) DROP TABLE "auth_user"; args=(); alias=default
ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
(0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-12-09 20:07:24.129321'); args=['auth', '0008_alter_user_username_max_length', '2024-12-09 20:07:24.129321']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.102) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL); (params None)
(0.101) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL); args=None; alias=default
INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name" FROM "auth_user"; (params ())
(0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name" FROM "auth_user"; args=(); alias=default
DROP TABLE "auth_user"; (params ())
(0.000) DROP TABLE "auth_user"; args=(); alias=default
ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
(0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-12-09 20:07:24.427019'); args=['auth', '0009_alter_user_last_name_max_length', '2024-12-09 20:07:24.427019']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.014) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
(0.004) CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); args=None; alias=default
INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
(0.000) INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; args=(); alias=default
DROP TABLE "auth_group"; (params ())
(0.000) DROP TABLE "auth_group"; args=(); alias=default
ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
(0.001) ALTER TABLE "new__auth_group" RENAME TO "auth_group"; args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-12-09 20:07:24.627580'); args=['auth', '0010_alter_group_name_max_length', '2024-12-09 20:07:24.627580']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.110) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.004) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-12-09 20:07:24.825005'); args=['auth', '0011_update_proxy_permissions', '2024-12-09 20:07:24.825005']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.013) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL); (params None)
(0.003) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL); args=None; alias=default
INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name") SELECT "id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name" FROM "auth_user"; (params ())
(0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name") SELECT "id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name" FROM "auth_user"; args=(); alias=default
DROP TABLE "auth_user"; (params ())
(0.000) DROP TABLE "auth_user"; args=(); alias=default
ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
(0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-12-09 20:07:25.027496'); args=['auth', '0012_alter_user_first_name_max_length', '2024-12-09 20:07:25.027496']; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.104) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "gui_classement" ("niveau" integer NOT NULL PRIMARY KEY, "description" text NULL); (params None)
(0.091) CREATE TABLE "gui_classement" ("niveau" integer NOT NULL PRIMARY KEY, "description" text NULL); args=None; alias=default
CREATE TABLE "gui_sexe" ("sexe" varchar(50) NOT NULL PRIMARY KEY); (params None)
(0.000) CREATE TABLE "gui_sexe" ("sexe" varchar(50) NOT NULL PRIMARY KEY); args=None; alias=default
CREATE TABLE "gui_sports" ("sport_type" varchar(50) NOT NULL PRIMARY KEY, "description" text NULL); (params None)
(0.000) CREATE TABLE "gui_sports" ("sport_type" varchar(50) NOT NULL PRIMARY KEY, "description" text NULL); args=None; alias=default
CREATE TABLE "gui_terrain" ("numero_terrain" integer NOT NULL PRIMARY KEY, "commentaire" text NULL); (params None)
(0.000) CREATE TABLE "gui_terrain" ("numero_terrain" integer NOT NULL PRIMARY KEY, "commentaire" text NULL); args=None; alias=default
CREATE TABLE "gui_type" ("type" varchar(50) NOT NULL PRIMARY KEY, "description" text NULL); (params None)
(0.000) CREATE TABLE "gui_type" ("type" varchar(50) NOT NULL PRIMARY KEY, "description" text NULL); args=None; alias=default
CREATE TABLE "gui_grouppermission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "description" text NULL, "role_id" integer NOT NULL UNIQUE REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_grouppermission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "description" text NULL, "role_id" integer NOT NULL UNIQUE REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_tournoi" ("idtournoi" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "nom" varchar(50) NOT NULL, "periode_debut" date NOT NULL, "periode_fin" date NULL, "description" text NULL, "type_id" varchar(50) NOT NULL REFERENCES "gui_type" ("type") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_tournoi" ("idtournoi" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "nom" varchar(50) NOT NULL, "periode_debut" date NOT NULL, "periode_fin" date NULL, "description" text NULL, "type_id" varchar(50) NOT NULL REFERENCES "gui_type" ("type") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_tournoi_terrains" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED, "terrain_id" integer NOT NULL REFERENCES "gui_terrain" ("numero_terrain") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_tournoi_terrains" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED, "terrain_id" integer NOT NULL REFERENCES "gui_terrain" ("numero_terrain") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_matchdetournoi" ("id_match" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "score" varchar(50) NULL, "points" integer NULL, "date_heure_match" datetime NOT NULL, "description" text NULL, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_matchdetournoi" ("id_match" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "score" varchar(50) NULL, "points" integer NULL, "date_heure_match" datetime NOT NULL, "description" text NULL, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_equipe" ("nom_equipe" varchar(50) NOT NULL PRIMARY KEY); (params None)
(0.000) CREATE TABLE "gui_equipe" ("nom_equipe" varchar(50) NOT NULL PRIMARY KEY); args=None; alias=default
CREATE TABLE "gui_equipe_tournoi" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "equipe_id" varchar(50) NOT NULL REFERENCES "gui_equipe" ("nom_equipe") DEFERRABLE INITIALLY DEFERRED, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_equipe_tournoi" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "equipe_id" varchar(50) NOT NULL REFERENCES "gui_equipe" ("nom_equipe") DEFERRABLE INITIALLY DEFERRED, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_utilisateur" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "niveau_id" integer NOT NULL REFERENCES "gui_classement" ("niveau") DEFERRABLE INITIALLY DEFERRED, "sexe_id" varchar(50) NOT NULL REFERENCES "gui_sexe" ("sexe") DEFERRABLE INITIALLY DEFERRED, "sport_type_id" varchar(50) NOT NULL REFERENCES "gui_sports" ("sport_type") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_utilisateur" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "niveau_id" integer NOT NULL REFERENCES "gui_classement" ("niveau") DEFERRABLE INITIALLY DEFERRED, "sexe_id" varchar(50) NOT NULL REFERENCES "gui_sexe" ("sexe") DEFERRABLE INITIALLY DEFERRED, "sport_type_id" varchar(50) NOT NULL REFERENCES "gui_sports" ("sport_type") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_utilisateur_equipe" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "utilisateur_id" bigint NOT NULL REFERENCES "gui_utilisateur" ("id") DEFERRABLE INITIALLY DEFERRED, "equipe_id" varchar(50) NOT NULL REFERENCES "gui_equipe" ("nom_equipe") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_utilisateur_equipe" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "utilisateur_id" bigint NOT NULL REFERENCES "gui_utilisateur" ("id") DEFERRABLE INITIALLY DEFERRED, "equipe_id" varchar(50) NOT NULL REFERENCES "gui_equipe" ("nom_equipe") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_utilisateur_match" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "utilisateur_id" bigint NOT NULL REFERENCES "gui_utilisateur" ("id") DEFERRABLE INITIALLY DEFERRED, "matchdetournoi_id" integer NOT NULL REFERENCES "gui_matchdetournoi" ("id_match") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_utilisateur_match" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "utilisateur_id" bigint NOT NULL REFERENCES "gui_utilisateur" ("id") DEFERRABLE INITIALLY DEFERRED, "matchdetournoi_id" integer NOT NULL REFERENCES "gui_matchdetournoi" ("id_match") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "gui_utilisateur_tournoi" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "utilisateur_id" bigint NOT NULL REFERENCES "gui_utilisateur" ("id") DEFERRABLE INITIALLY DEFERRED, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "gui_utilisateur_tournoi" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "utilisateur_id" bigint NOT NULL REFERENCES "gui_utilisateur" ("id") DEFERRABLE INITIALLY DEFERRED, "tournoi_id" integer NOT NULL REFERENCES "gui_tournoi" ("idtournoi") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE INDEX "gui_tournoi_type_id_8ff6863b" ON "gui_tournoi" ("type_id"); (params None)
(0.000) CREATE INDEX "gui_tournoi_type_id_8ff6863b" ON "gui_tournoi" ("type_id"); args=None; alias=default
CREATE UNIQUE INDEX "gui_tournoi_terrains_tournoi_id_terrain_id_4cc14f95_uniq" ON "gui_tournoi_terrains" ("tournoi_id", "terrain_id"); (params None)
(0.000) CREATE UNIQUE INDEX "gui_tournoi_terrains_tournoi_id_terrain_id_4cc14f95_uniq" ON "gui_tournoi_terrains" ("tournoi_id", "terrain_id"); args=None; alias=default
CREATE INDEX "gui_tournoi_terrains_tournoi_id_e768d7a1" ON "gui_tournoi_terrains" ("tournoi_id"); (params None)
(0.000) CREATE INDEX "gui_tournoi_terrains_tournoi_id_e768d7a1" ON "gui_tournoi_terrains" ("tournoi_id"); args=None; alias=default
CREATE INDEX "gui_tournoi_terrains_terrain_id_d7cb0540" ON "gui_tournoi_terrains" ("terrain_id"); (params None)
(0.000) CREATE INDEX "gui_tournoi_terrains_terrain_id_d7cb0540" ON "gui_tournoi_terrains" ("terrain_id"); args=None; alias=default
CREATE INDEX "gui_matchdetournoi_tournoi_id_79c3dc4b" ON "gui_matchdetournoi" ("tournoi_id"); (params None)
(0.000) CREATE INDEX "gui_matchdetournoi_tournoi_id_79c3dc4b" ON "gui_matchdetournoi" ("tournoi_id"); args=None; alias=default
CREATE UNIQUE INDEX "gui_equipe_tournoi_equipe_id_tournoi_id_dc46ff1d_uniq" ON "gui_equipe_tournoi" ("equipe_id", "tournoi_id"); (params None)
(0.000) CREATE UNIQUE INDEX "gui_equipe_tournoi_equipe_id_tournoi_id_dc46ff1d_uniq" ON "gui_equipe_tournoi" ("equipe_id", "tournoi_id"); args=None; alias=default
CREATE INDEX "gui_equipe_tournoi_equipe_id_fd43fd1c" ON "gui_equipe_tournoi" ("equipe_id"); (params None)
(0.000) CREATE INDEX "gui_equipe_tournoi_equipe_id_fd43fd1c" ON "gui_equipe_tournoi" ("equipe_id"); args=None; alias=default
CREATE INDEX "gui_equipe_tournoi_tournoi_id_d50386b1" ON "gui_equipe_tournoi" ("tournoi_id"); (params None)
(0.000) CREATE INDEX "gui_equipe_tournoi_tournoi_id_d50386b1" ON "gui_equipe_tournoi" ("tournoi_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_niveau_id_ca01d5bf" ON "gui_utilisateur" ("niveau_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_niveau_id_ca01d5bf" ON "gui_utilisateur" ("niveau_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_sexe_id_4790d81a" ON "gui_utilisateur" ("sexe_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_sexe_id_4790d81a" ON "gui_utilisateur" ("sexe_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_sport_type_id_8438e15d" ON "gui_utilisateur" ("sport_type_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_sport_type_id_8438e15d" ON "gui_utilisateur" ("sport_type_id"); args=None; alias=default
CREATE UNIQUE INDEX "gui_utilisateur_equipe_utilisateur_id_equipe_id_40612afc_uniq" ON "gui_utilisateur_equipe" ("utilisateur_id", "equipe_id"); (params None)
(0.000) CREATE UNIQUE INDEX "gui_utilisateur_equipe_utilisateur_id_equipe_id_40612afc_uniq" ON "gui_utilisateur_equipe" ("utilisateur_id", "equipe_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_equipe_utilisateur_id_3130855a" ON "gui_utilisateur_equipe" ("utilisateur_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_equipe_utilisateur_id_3130855a" ON "gui_utilisateur_equipe" ("utilisateur_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_equipe_equipe_id_9967297d" ON "gui_utilisateur_equipe" ("equipe_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_equipe_equipe_id_9967297d" ON "gui_utilisateur_equipe" ("equipe_id"); args=None; alias=default
CREATE UNIQUE INDEX "gui_utilisateur_match_utilisateur_id_matchdetournoi_id_e545b6d2_uniq" ON "gui_utilisateur_match" ("utilisateur_id", "matchdetournoi_id"); (params None)
(0.000) CREATE UNIQUE INDEX "gui_utilisateur_match_utilisateur_id_matchdetournoi_id_e545b6d2_uniq" ON "gui_utilisateur_match" ("utilisateur_id", "matchdetournoi_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_match_utilisateur_id_8a6bd3bc" ON "gui_utilisateur_match" ("utilisateur_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_match_utilisateur_id_8a6bd3bc" ON "gui_utilisateur_match" ("utilisateur_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_match_matchdetournoi_id_1346b7b0" ON "gui_utilisateur_match" ("matchdetournoi_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_match_matchdetournoi_id_1346b7b0" ON "gui_utilisateur_match" ("matchdetournoi_id"); args=None; alias=default
CREATE UNIQUE INDEX "gui_utilisateur_tournoi_utilisateur_id_tournoi_id_2f224375_uniq" ON "gui_utilisateur_tournoi" ("utilisateur_id", "tournoi_id"); (params None)
(0.000) CREATE UNIQUE INDEX "gui_utilisateur_tournoi_utilisateur_id_tournoi_id_2f224375_uniq" ON "gui_utilisateur_tournoi" ("utilisateur_id", "tournoi_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_tournoi_utilisateur_id_1079bc31" ON "gui_utilisateur_tournoi" ("utilisateur_id"); (params None)
(0.092) CREATE INDEX "gui_utilisateur_tournoi_utilisateur_id_1079bc31" ON "gui_utilisateur_tournoi" ("utilisateur_id"); args=None; alias=default
CREATE INDEX "gui_utilisateur_tournoi_tournoi_id_e95b96bd" ON "gui_utilisateur_tournoi" ("tournoi_id"); (params None)
(0.000) CREATE INDEX "gui_utilisateur_tournoi_tournoi_id_e95b96bd" ON "gui_utilisateur_tournoi" ("tournoi_id"); args=None; alias=default
(0.015) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.097) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('gui', '0001_initial', '2024-12-09 20:07:26.237887'); args=['gui', '0001_initial', '2024-12-09 20:07:26.237887']; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
(0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
(0.000) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
(0.091) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.015) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-12-09 20:07:26.434271'); args=['sessions', '0001_initial', '2024-12-09 20:07:26.434271']; alias=default
(0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.099) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.002) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry'); args=('admin', 'logentry'); alias=default
(0.010) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" IN ('logentry')); args=('admin', 'logentry'); alias=default
(0.083) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
(0.000) BEGIN; args=None; alias=default
(0.004) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry'); args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
(0.014) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
(0.079) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user'); args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
(0.014) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" IN ('user', 'group', 'permission')); args=('auth', 'user', 'group', 'permission'); alias=default
(0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
(0.000) BEGIN; args=None; alias=default
(0.080) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user'); args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
(0.009) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype'); args=('contenttypes', 'contenttype'); alias=default
(0.091) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" IN ('contenttype')); args=('contenttypes', 'contenttype'); alias=default
(0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype'); args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
(0.011) COMMIT; args=None; alias=default
(0.071) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session'); args=('sessions', 'session'); alias=default
(0.011) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" IN ('session')); args=('sessions', 'session'); alias=default
(0.080) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session'); args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
(0.011) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'gui'; args=('gui',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.003) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('gui', 'classement'), ('gui', 'sexe'), ('gui', 'sports'), ('gui', 'terrain'), ('gui', 'type'), ('gui', 'grouppermission'), ('gui', 'tournoi'), ('gui', 'matchdetournoi'), ('gui', 'equipe'), ('gui', 'utilisateur'); args=('gui', 'classement', 'gui', 'sexe', 'gui', 'sports', 'gui', 'terrain', 'gui', 'type', 'gui', 'grouppermission', 'gui', 'tournoi', 'gui', 'matchdetournoi', 'gui', 'equipe', 'gui', 'utilisateur'); alias=default
(0.077) COMMIT; args=None; alias=default
(0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'gui' AND "django_content_type"."model" IN ('equipe', 'type', 'utilisateur', 'matchdetournoi', 'sports', 'grouppermission', 'terrain', 'tournoi', 'sexe', 'classement')); args=('gui', 'equipe', 'type', 'utilisateur', 'matchdetournoi', 'sports', 'grouppermission', 'terrain', 'tournoi', 'sexe', 'classement'); alias=default
(0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7, 8, 9, 10, 11, 12, 13, 14, 15, 16) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7, 8, 9, 10, 11, 12, 13, 14, 15, 16); alias=default
(0.000) BEGIN; args=None; alias=default
(0.004) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add classement', 7, 'add_classement'), ('Can change classement', 7, 'change_classement'), ('Can delete classement', 7, 'delete_classement'), ('Can view classement', 7, 'view_classement'), ('Can add sexe', 8, 'add_sexe'), ('Can change sexe', 8, 'change_sexe'), ('Can delete sexe', 8, 'delete_sexe'), ('Can view sexe', 8, 'view_sexe'), ('Can add sports', 9, 'add_sports'), ('Can change sports', 9, 'change_sports'), ('Can delete sports', 9, 'delete_sports'), ('Can view sports', 9, 'view_sports'), ('Can add terrain', 10, 'add_terrain'), ('Can change terrain', 10, 'change_terrain'), ('Can delete terrain', 10, 'delete_terrain'), ('Can view terrain', 10, 'view_terrain'), ('Can add type', 11, 'add_type'), ('Can change type', 11, 'change_type'), ('Can delete type', 11, 'delete_type'), ('Can view type', 11, 'view_type'), ('Can add group permission', 12, 'add_grouppermission'), ('Can change group permission', 12, 'change_grouppermission'), ('Can delete group permission', 12, 'delete_grouppermission'), ('Can view group permission', 12, 'view_grouppermission'), ('Can add tournoi', 13, 'add_tournoi'), ('Can change tournoi', 13, 'change_tournoi'), ('Can delete tournoi', 13, 'delete_tournoi'), ('Can view tournoi', 13, 'view_tournoi'), ('Can add match de tournoi', 14, 'add_matchdetournoi'), ('Can change match de tournoi', 14, 'change_matchdetournoi'), ('Can delete match de tournoi', 14, 'delete_matchdetournoi'), ('Can view match de tournoi', 14, 'view_matchdetournoi'), ('Can add equipe', 15, 'add_equipe'), ('Can change equipe', 15, 'change_equipe'), ('Can delete equipe', 15, 'delete_equipe'), ('Can view equipe', 15, 'view_equipe'), ('Can add utilisateur', 16, 'add_utilisateur'), ('Can change utilisateur', 16, 'change_utilisateur'), ('Can delete utilisateur', 16, 'delete_utilisateur'), ('Can view utilisateur', 16, 'view_utilisateur'); args=('Can add classement', 7, 'add_classement', 'Can change classement', 7, 'change_classement', 'Can delete classement', 7, 'delete_classement', 'Can view classement', 7, 'view_classement', 'Can add sexe', 8, 'add_sexe', 'Can change sexe', 8, 'change_sexe', 'Can delete sexe', 8, 'delete_sexe', 'Can view sexe', 8, 'view_sexe', 'Can add sports', 9, 'add_sports', 'Can change sports', 9, 'change_sports', 'Can delete sports', 9, 'delete_sports', 'Can view sports', 9, 'view_sports', 'Can add terrain', 10, 'add_terrain', 'Can change terrain', 10, 'change_terrain', 'Can delete terrain', 10, 'delete_terrain', 'Can view terrain', 10, 'view_terrain', 'Can add type', 11, 'add_type', 'Can change type', 11, 'change_type', 'Can delete type', 11, 'delete_type', 'Can view type', 11, 'view_type', 'Can add group permission', 12, 'add_grouppermission', 'Can change group permission', 12, 'change_grouppermission', 'Can delete group permission', 12, 'delete_grouppermission', 'Can view group permission', 12, 'view_grouppermission', 'Can add tournoi', 13, 'add_tournoi', 'Can change tournoi', 13, 'change_tournoi', 'Can delete tournoi', 13, 'delete_tournoi', 'Can view tournoi', 13, 'view_tournoi', 'Can add match de tournoi', 14, 'add_matchdetournoi', 'Can change match de tournoi', 14, 'change_matchdetournoi', 'Can delete match de tournoi', 14, 'delete_matchdetournoi', 'Can view match de tournoi', 14, 'view_matchdetournoi', 'Can add equipe', 15, 'add_equipe', 'Can change equipe', 15, 'change_equipe', 'Can delete equipe', 15, 'delete_equipe', 'Can view equipe', 15, 'view_equipe', 'Can add utilisateur', 16, 'add_utilisateur', 'Can change utilisateur', 16, 'change_utilisateur', 'Can delete utilisateur', 16, 'delete_utilisateur', 'Can view utilisateur', 16, 'view_utilisateur'); alias=default
(0.015) COMMIT; args=None; alias=default
(0.080) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'gui'; args=('gui',); alias=default
(0.094) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.001) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'raqtour' LIMIT 21; args=('raqtour',); alias=default
(0.002) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'raqtour' LIMIT 21; args=('raqtour',); alias=default
(0.119) INSERT INTO "auth_user" ("password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined") VALUES ('pbkdf2_sha256$870000$VTsnlKem5PG6UDO6EqIl1N$puVhfetkHyt0THDtPOr3+hxwryuwazO1EFZdrMiwMCY=', NULL, 1, 'raqtour', '', '', 'service.raqtour@gmail.com', 1, 1, '2024-12-09 20:08:41.024103'); args=['pbkdf2_sha256$870000$VTsnlKem5PG6UDO6EqIl1N$puVhfetkHyt0THDtPOr3+hxwryuwazO1EFZdrMiwMCY=', None, True, 'raqtour', '', '', 'service.raqtour@gmail.com', True, True, '2024-12-09 20:08:41.024103']; alias=default
